#!/bin/bash

config_changes=0
display_file="$SNAP_DATA/ubuntu-core-kiosk.display"
config_file="$SNAP_DATA/ubuntu-core-kiosk.config"

config_entry() {
  if ! grep -q "^[# ]*${1##?[#\ ]}=" "${config_file}"; then
    cat <<EOT >> "${config_file}"

# $3
$1=${2}
EOT
    let config_changes+=1
  fi
}

# display_file
if kiosk_display=$(snapctl get kiosk-display); then
  # A display configuration can be supplied through the kiosk-display option
  if [ -n "${kiosk_display}" ]; then
    cat <<EOT >> "${display_file}~"
# DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN
# USE 'snap set $SNAP_NAME kiosk-display=...' INSTEAD

${kiosk_display}
EOT
    if ! diff "${display_file}~" "${display_file}" > /dev/null; then
      mv "${display_file}"  "${display_file}.save"
      mv "${display_file}~" "${display_file}"
      let config_changes+=1
    else
      rm "${display_file}~"
    fi
  fi
fi

# config_file
if kiosk_config=$(snapctl get kiosk-config); then
  # A kiosk configuration can be supplied through the kiosk-config option
  if [ -n "${kiosk_config}" ]; then
    cat <<EOT >> "${config_file}~"
# DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN
# USE 'snap set $SNAP_NAME kiosk-config=...' INSTEAD

${kiosk_config}
EOT
    if ! diff "${config_file}~" "${config_file}" > /dev/null; then
      mv "${config_file}"  "${config_file}.save"
      mv "${config_file}~" "${config_file}"
      let config_changes+=1
    else
      rm "${config_file}~"
    fi
  else
    # No kiosk configuration is supplied, we'll generate a default

    # If 'vt.handoff' is set, Mir only starts first time on the default VT. (#779)
    # Until we understand and fix properly, set the config the way that works.
    if ! grep -q snap_core= /proc/cmdline || ! grep -q vt.handoff= /proc/cmdline
    then vt=4
    else vt=0
    fi

    if [ ! -e "${config_file}" ]; then
    cat <<EOT > "${config_file}"
# Configuration file for $SNAP_NAME
# ========================================
# The following entries may be edited (or commented in or out) to adjust
# the desktop environment. If they are removed, then defaults will be
# automatically restored.
EOT
    fi

    config_entry "console-provider"   "vt"                                  "Required to run as daemon"
    config_entry "vt"                 "${vt}"                               "Virtual terminal to use for display (0 to use current)"
    config_entry "cursor"             "auto"                                "Mouse pointer to use (auto|none|software)"
    config_entry "env-hacks"          "MIR_MESA_KMS_DISABLE_MODESET_PROBE"  "As kiosk HAS to run mesa-kms we can safely override the probe for KMS everywhere"
  fi
fi

if [ "$(snapctl get daemon)" = "true" ]; then
  if snapctl services "${SNAP_NAME}.daemon" | grep -q inactive; then
    snapctl start --enable "$SNAP_NAME.daemon" 2>&1 || true
  elif [ $config_changes -gt 0 ]; then
    snapctl restart "$SNAP_NAME.daemon" || true
  fi
else
  snapctl stop --disable "$SNAP_NAME.daemon" 2>&1 || true
fi
