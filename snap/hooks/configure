#!/bin/bash
set -euo pipefail

config_changes=0
display_file="$SNAP_DATA/ubuntu_core_kiosk.display"
config_file="$SNAP_DATA/ubuntu_core_kiosk.config"

# display_file
# A display configuration can be supplied through the kiosk-display option
kiosk_display="$(snapctl get kiosk-display)"
if [ -n "${kiosk_display}" ]
then
  display_temp="$(mktemp)"
  cat <<EOT > "${display_temp}"
# DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN
# USE 'snap set $SNAP_INSTANCE_NAME kiosk-display=...' INSTEAD

${kiosk_display}
EOT
  if ! diff "${display_temp}" "${display_file}" > /dev/null; then
    mv "${display_file}"  "${display_file}.save" || true
    mv "${display_temp}" "${display_file}"
    chmod a+r "${display_file}"
    let config_changes+=1
  else
    rm "${display_temp}"
  fi
else
  mv "${display_file}"  "${display_file}.save" || true
fi

# config_file
# A kiosk configuration can be supplied through the kiosk-config option
kiosk_config="$(snapctl get kiosk-config)"
config_temp="$(mktemp)"
cat <<EOT > "${config_temp}"
# DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN
# USE 'snap set $SNAP_INSTANCE_NAME kiosk-config=...' INSTEAD

# ** Options supplied through kiosk-config (begin) **
${kiosk_config:-# (none)}
# ** Options supplied through kiosk-config (end) **
EOT

config_entry() {
  if ! grep -q "^$1=" "${config_temp}"; then
    cat <<EOT >> "${config_temp}"

# $3
$1=$2
EOT
  fi
}

if grep -q snap_core= /proc/cmdline && grep -q vt.handoff= /proc/cmdline
then
  cat <<EOT >> "${config_temp}"

# WORKAROUND: On Ubuntu Core, if 'vt.handoff' is set, Mir can only start with vt=0.
# The correct fix is: https://github.com/snapcore/pi-gadget/pull/12
vt=0
EOT
fi

# Fill in defaults for any options not already supplied
config_entry "console-provider"   "vt"                                  "Required to run as daemon"
config_entry "vt"                 "4"                                   "Virtual terminal to use for display (0 to use current)"
config_entry "cursor"             "auto"                                "Mouse pointer to use (auto|none|software)"
config_entry "env-hacks"          "MIR_MESA_KMS_DISABLE_MODESET_PROBE"  "As kiosk HAS to run mesa-kms we can safely override the probe for KMS everywhere"

if ! diff "${config_temp}" "${config_file}" > /dev/null; then
  mv "${config_file}"  "${config_file}.save" || true
  mv "${config_temp}" "${config_file}"
  chmod a+r "${config_file}"
  let config_changes+=1
else
  rm "${config_temp}"
fi

# (Re)start the daemon
if [ "$(snapctl get daemon)" = "true" ]; then
  if snapctl services "$SNAP_INSTANCE_NAME.daemon" | grep -q inactive; then
    snapctl start --enable "$SNAP_INSTANCE_NAME.daemon" 2>&1 || true
  elif [ $config_changes -gt 0 ]; then
    snapctl restart "$SNAP_INSTANCE_NAME.daemon" || true
  fi
else
  snapctl stop --disable "$SNAP_INSTANCE_NAME.daemon" 2>&1 || true
fi
